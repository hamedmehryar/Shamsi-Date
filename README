Provides an exact scientific approach to create Jalali calendar
with an interface similar to php date()

Examples:
Constructing the class (although this is not relly needed):
1. Constructing a class from php.time():
	$jDate_1 = new \Jalali\Date( ) ;
2. Constructing the class from any given time stamp:
	$jDate_2 = new \Jalali\Date( TIME_STAMP ) ;
3. Constructing the class from (year, month, day, hour, minute, second) values:
	This is the format used by php.mktime() but gets Persian date values
	$jDate_3 = new \Jalali\Date( 1383, 12, 30, 13, 45, 25 ) ;

Calling class methods:
1. $jDate->date( FORMAT ) ; //syntax of FORMAT is same as php.date() syntax.
	[see: hhtp://www.php.net/manual/en/function.date.php].
2. $jDate->timestamp( ) ; //returns the used (internal) timestamp.
	This is the same value returned from php.time() for the equivalent Julian date.
	(php.date() returns equival Julian date for this time stamp.)

Function call:
1. \Jalali\date( format, [time stamp], [decorate] ) ; //using the format outputs the timestamp -- or the current
	stamp if left blank, in the desired shape. use decorate to show numbers as Arabic numbers --or strings.

In general only the following methods should be called:
	mktime(year, month, day, hour, minute, second) to create time stamp for a given date.
	date(format, [time stamp], [decorate]) to build readable output from time stamp.
